package gui.panel;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.JLabel;
import javax.swing.JPanel;

import gui.page.SpendPage;
import service.SpendService;
import util.CircleProgressBar;
import util.ColorUtil;
import util.GUIUtil;

public class SpendPanel extends WorkingPanel{
	static {
		GUIUtil.useLNF();
	}
	
	public static SpendPanel spendPanel = new SpendPanel();
	
	public JLabel lMonthSpend = new JLabel("Monthly Consumption");
    public JLabel lTodaySpend = new JLabel("Today's Consumption");
    public JLabel lAvgSpendPerDay = new JLabel("Average daily Consumption");
    public JLabel lMonthLeft = new JLabel("Remain");
    public JLabel lDayAvgAvailable = new JLabel("Daily Availability");
    public JLabel lMonthLeftDay = new JLabel("Reamin day(s)");
 
    public JLabel vMonthSpend = new JLabel("0");
    public JLabel vTodaySpend = new JLabel("0");
    public JLabel vAvgSpendPerDay = new JLabel("0");
    public JLabel vMonthAvailable = new JLabel("0");
    public JLabel vDayAvgAvailable = new JLabel("0");
    public JLabel vMonthLeftDay = new JLabel("0");
    
    CircleProgressBar bar;
    
	private SpendPanel() {
		this.setLayout(new BorderLayout());
		bar = new CircleProgressBar();
		bar.setBackgroundColor(ColorUtil.blueColor);
		
		GUIUtil.setColor(ColorUtil.grayColor, lMonthSpend, lTodaySpend, lAvgSpendPerDay, lMonthLeft, lDayAvgAvailable,
                lMonthLeftDay, vAvgSpendPerDay, vMonthAvailable, vDayAvgAvailable, vMonthLeftDay);
		GUIUtil.setColor(ColorUtil.blueColor, vMonthSpend, vTodaySpend);
		
		vMonthSpend.setFont(new Font("微软雅黑", Font.BOLD, 23));
        vTodaySpend.setFont(new Font("微软雅黑", Font.BOLD, 23));
 
        this.add(center(), BorderLayout.CENTER);
        this.add(south(), BorderLayout.SOUTH);
	}
	
	private JPanel center() {
		JPanel centerPanel = new JPanel();
		centerPanel.setLayout(new BorderLayout());
		centerPanel.add(west(), BorderLayout.WEST);
		centerPanel.add(center2(), BorderLayout.CENTER);
		return centerPanel;
	}
	
	private JPanel west() {
		JPanel west = new JPanel();
		west.setLayout(new GridLayout(4, 1));
		west.add(lMonthSpend);
		west.add(vMonthSpend);
        west.add(lTodaySpend);
        west.add(vTodaySpend);
		return west;
	}
	
	private Component center2() {
		return bar;
	}
	
	private JPanel south() {
		JPanel southPanel = new JPanel();
		
		southPanel.setLayout(new GridLayout(2, 4));
		southPanel.add(lAvgSpendPerDay);
		southPanel.add(lMonthLeft);
        southPanel.add(lDayAvgAvailable);
        southPanel.add(lMonthLeftDay);
        southPanel.add(vAvgSpendPerDay);
        southPanel.add(vMonthAvailable);
        southPanel.add(vDayAvgAvailable);
        southPanel.add(vMonthLeftDay);
        
        return southPanel;
	}
	
	 public static void main(String[] args) {
         
	        GUIUtil.showPanel(SpendPanel.spendPanel);
	    }

	@Override
	public void updateData() {
		// TODO Auto-generated method stub
		SpendPage spend = new SpendService().getSpendPage();
		vMonthSpend.setText(spend.monthSpend);
		vTodaySpend.setText(spend.todaySpend);
		vAvgSpendPerDay.setText(spend.avgSpendPerDay);
		vMonthAvailable.setText(spend.monthAvailable);
		vDayAvgAvailable.setText(spend.avgAvailablePerDay);
		vMonthLeftDay.setText(spend.leftDay);
		
		bar.setProgress(spend.usagePercentage);
		if (spend.isOverSpend) {
			vMonthAvailable.setForeground(ColorUtil.warningColor);
			vMonthSpend.setForeground(ColorUtil.warningColor);
			vTodaySpend.setForeground(ColorUtil.warningColor);
		} else {
			vMonthAvailable.setForeground(ColorUtil.grayColor);
            vMonthSpend.setForeground(ColorUtil.blueColor);
            vTodaySpend.setForeground(ColorUtil.blueColor);
		}
		bar.setForegroundColor(ColorUtil.getByPercentage(spend.usagePercentage));
	}

	@Override
	public void addListener() {
		// TODO Auto-generated method stub
		
	}
}
